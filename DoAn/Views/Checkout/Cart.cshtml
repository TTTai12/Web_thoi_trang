@using DoAn.Models;

<div class="banner-top">
    <div class="container">
        <h1>Checkout</h1>
        <em></em>
        <h2><a href="index.html">Home</a><label>/</label>Checkout</h2>
    </div>
</div>
<div class="container">


    @{
        if ((List<Cart>)Session["Cart"] == null)
        {

            <div class="emty_cart" style="text-align:center" width="200px">
                <img src="~/Content/images/trong.jpg" />
            </div>

        }
        else
        {
            <div class="check-out">
                <div class="container">
                    <div class="bs-example4" data-example-id="simple-responsive-table">
                        <div class="table-responsive">
                            <table class="table-heading simpleCart_shelfItem">
                                <tr>
                                    <th class="table-grid">Item</th>

                                    <th>Prices</th>
                                    <th>Quantity</th>
                                    <th>Subtotal</th>
                                    <th>         </th>
                                </tr>

                                @foreach (var cart in (List<Cart>)Session["Cart"])
                                {
                                    double p = Convert.ToDouble(cart.Product.Price);
                                    int q = Convert.ToInt32(cart.Quantity);
                                    double subtotal = p * q;
                                    <tr class="cart-header">
                                        <td class="ring-in">
                                            <a href="@Url.Action("Index", "Single")" class="at-in"><img src="~/Content/images/product/@cart.Product.ProductPictures" class="img-responsive" alt=""></a>
                                            <div class="sed">
                                                <h5><a href="@Url.Action("Index", "Single")">@cart.Product.ProductName</a></h5>
                                                <p>(At vero eos et accusamus et iusto odio dignissimos ducimus ) </p>
                                            </div>
                                        </td>
                                        <td class="item_price">@Html.FormatValue(cart.Product.Price, "{0:#,###}")$</td>
                                        <td><input type="number" class="txtQuantity" data-id="@cart.Product.ID" value="@cart.Quantity" /></td>

                                        <td class="item_price">@Html.FormatValue(subtotal, "{0:#,###}")$</td>
                                        
                                    </tr>
                                }

                                @{
                                    List<Cart> temp = (List<Cart>)Session["Cart"];
                                    var total = temp.Sum(x => x.Quantity * x.Product.Price);
                                }
                            </table>
                        </div>
                    </div>
                    
                </div>
            </div>
        }
    }
    @using (Html.BeginForm("ProcessOrder", "Checkout", FormMethod.Post, new { id = "customer-form" }))
    {
        <div class="form-horizontal">
            <hr />
            <div class="form-group">
                <label class="control-label col-md-2">Customer Name</label>
                <div class="col-md-10">
                    <input type="text" name="cusName" class="form-control" />
                </div>
            </div>
            <div class="form-group">
                <label class="control-label col-md-2">Customer Phone</label>
                <div class="col-md-10">
                    <input type="text" name="cusPhone" class="form-control" />
                </div>
            </div>
            <div class="form-group">
                <label class="control-label col-md-2">Customer Email</label>
                <div class="col-md-10">
                    <input type="text" name="cusEmail" class="form-control" />
                </div>
            </div>
            <div class="form-group">
                <label class="control-label col-md-2">Customer Address</label>
                <div class="col-md-10">
                    <input type="text" name="cusAddress" class="form-control" />
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Process Order" class="btn btn-default" />
                </div>
            </div>
        </div>
    }
    <script type="text/javascript">
        $("#custemer-form").validate({
            rules: {
                cusName: {
                    required: true
                },
                cusPhone: {
                    required: true
                },
                cusEmail: {
                    required: true
                },
                cusAddress: {
                    required: true
                },
            }
        });
    </script>
</div>
</div>
<div class="clearfix"></div>
    </div>
</div>
<div class="container">
    <div class="brand">
        <div class="col-md-3 brand-grid">
            <img src="~/Content/images/ic.png" class="img-responsive" alt="">
        </div>
        <div class="col-md-3 brand-grid">
            <img src="~/Content/images/ic1.png" class="img-responsive" alt="">
        </div>
        <div class="col-md-3 brand-grid">
            <img src="~/Content/images/ic2.png" class="img-responsive" alt="">
        </div>
        <div class="col-md-3 brand-grid">
            <img src="~/Content/images/ic3.png" class="img-responsive" alt="">
        </div>
        <div class="clearfix"></div>
    </div>
</div>
<script>
    //<![CDATA[
    $('input.input-qty').each(function () {
        var $this = $(this),
            qty = $this.parent().find('.is-form'),
            min = Number($this.attr('min')),
            max = Number($this.attr('max'))
        if (min == 0) {
            var d = 0
        } else d = min
        $(qty).on('click', function () {
            if ($(this).hasClass('minus')) {
                if (d > min) d += -1
            } else if ($(this).hasClass('plus')) {
                var x = Number($this.val()) + 1
                if (x <= max) d += 1
            }
            $this.attr('value', d).val(d)
        })
    })
//]]></script><!--Soluong-->